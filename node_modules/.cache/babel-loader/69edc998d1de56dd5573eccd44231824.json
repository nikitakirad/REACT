{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport { Input, TextArea, Form } from 'semantic-ui-react';\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  let validationError = null;\n\n  if (props.invalid && props.touched) {\n    validationError = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 27\n      }\n    }, \"Please enter a valid value!\");\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, \"EMAIL:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 34\n        }\n      }), /*#__PURE__*/React.createElement(Input, Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 44\n        }\n      }));\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, \"PASSWORD:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(TextArea, Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 44\n        }\n      }));\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/React.createElement(Input, Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.Label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, props.label), validationError, inputElement);\n};\n\nexport default input;","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/components/UI/Input/Input.js"],"names":["React","Input","TextArea","Form","input","props","inputElement","inputClasses","classes","InputElement","invalid","shouldValidate","touched","push","Invalid","validationError","elementType","join","elementConfig","value","changed","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,QAAd,EAAuBC,IAAvB,QAAkC,mBAAlC;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IAAa;AACvB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAACC,OAAO,CAACC,YAAT,CAArB;;AAEA,MAAIJ,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACM,cAAvB,IAAyCN,KAAK,CAACO,OAAnD,EAA4D;AACxDL,IAAAA,YAAY,CAACM,IAAb,CAAkBL,OAAO,CAACM,OAA1B;AACH;;AACD,MAAIC,eAAe,GAAG,IAAtB;;AACA,MAAIV,KAAK,CAACK,OAAN,IAAiBL,KAAK,CAACO,OAA3B,EAAoC;AAChCG,IAAAA,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAlB;AACH;;AACD,UAASV,KAAK,CAACW,WAAf;AACI,SAAO,OAAP;AACIV,MAAAA,YAAY,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrB,eAEA,oBAAC,KAAD;AACI,QAAA,SAAS,EAAEC,YAAY,CAACU,IAAb,CAAkB,GAAlB;AADf,SAEQZ,KAAK,CAACa,aAFd;AAGI,QAAA,KAAK,EAAEb,KAAK,CAACc,KAHjB;AAII,QAAA,QAAQ,EAAEd,KAAK,CAACe,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA,eAM+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAN/B,CADA;AASA;;AACJ,SAAO,UAAP;AACId,MAAAA,YAAY,gBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,eACwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADxB,eAEA,oBAAC,QAAD;AACI,QAAA,SAAS,EAAEC,YAAY,CAACU,IAAb,CAAkB,GAAlB;AADf,SAEQZ,KAAK,CAACa,aAFd;AAGI,QAAA,KAAK,EAAEb,KAAK,CAACc,KAHjB;AAII,QAAA,QAAQ,EAAEd,KAAK,CAACe,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA,eAM+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAN/B,CADA;AASA;;AAEJ;AACId,MAAAA,YAAY,gBAEZ,oBAAC,KAAD;AACI,QAAA,SAAS,EAAEC,YAAY,CAACU,IAAb,CAAkB,GAAlB;AADf,SAEQZ,KAAK,CAACa,aAFd;AAGI,QAAA,KAAK,EAAEb,KAAK,CAACc,KAHjB;AAII,QAAA,QAAQ,EAAEd,KAAK,CAACe,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA;AAzBR;;AAkCA,sBACI;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACP,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAEO,OAAO,CAACa,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkChB,KAAK,CAACiB,KAAxC,CADJ,EAEKP,eAFL,EAGKT,YAHL,CADJ;AAQH,CArDD;;AAuDA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport {Input,TextArea,Form} from 'semantic-ui-react';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n    let validationError = null;\n    if (props.invalid && props.touched) {\n        validationError = <p>Please enter a valid value!</p>;\n    }\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement =\n            <div>\n            <label>EMAIL:</label><br></br>\n            <Input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} /><br></br>\n            </div>;\n            break;\n        case ( 'textarea' ):\n            inputElement = \n            <div>\n            <label>PASSWORD:</label><br></br>\n            <TextArea\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} /><br></br>\n            </div>;\n            break;\n        \n        default:\n            inputElement = \n            \n            <Input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} />;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {validationError}\n            {inputElement}\n        </div>\n    );\n\n};\n\nexport default input;"]},"metadata":{},"sourceType":"module"}