{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/App.js\";\nimport React, { Component, lazy, Suspense } from 'react';\nimport { withRouter, Route, Switch, Redirect } from 'react-router-dom';\nimport Blog from './containers/Blog/Blog';\nimport { connect } from 'react-redux';\nconst Auth = lazy(() => import('./containers/Auth/Auth'));\nconst Logout = lazy(() => import('./containers/Auth/Logout/Logout'));\n\nclass App extends Component {\n  render() {\n    let routes = null;\n    routes = /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      render: props => /*#__PURE__*/React.createElement(Auth, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 46\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      component: Blog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    }));\n\n    if (this.props.isAuthenticated) {\n      routes = /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/login\",\n        render: props => /*#__PURE__*/React.createElement(Auth, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 48\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/logout\",\n        render: () => /*#__PURE__*/React.createElement(Logout, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 44\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/\",\n        component: Blog,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }));\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Suspense, {\n      fallback: /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 27\n        }\n      }, \"Loading...\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, routes));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuthenticated: state.token !== null\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(App));","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/App.js"],"names":["React","Component","lazy","Suspense","withRouter","Route","Switch","Redirect","Blog","connect","Auth","Logout","App","render","routes","props","isAuthenticated","mapStateToProps","state","console","log","token"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,IAA1B,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAAQC,UAAR,EAAmBC,KAAnB,EAAyBC,MAAzB,EAAiCC,QAAjC,QAAgD,kBAAhD;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,MAAMC,IAAI,GAAGR,IAAI,CAAC,MAAM,OAAO,wBAAP,CAAP,CAAjB;AACA,MAAMS,MAAM,GAAGT,IAAI,CAAC,MAAI,OAAO,iCAAP,CAAL,CAAnB;;AACA,MAAMU,GAAN,SAAkBX,SAAlB,CAA4B;AAE1BY,EAAAA,MAAM,GAAE;AACN,QAAIC,MAAM,GAAC,IAAX;AACAA,IAAAA,MAAM,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAsB,MAAA,MAAM,EAAEC,KAAK,iBAAI,oBAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAiB,MAAA,SAAS,EAAEP,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADA;;AAMA,QAAG,KAAKO,KAAL,CAAWC,eAAd,EAA8B;AAC5BF,MAAAA,MAAM,gBACN,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAsB,QAAA,MAAM,EAAEC,KAAK,iBAAI,oBAAC,IAAD,oBAAUA,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,MAAM,EAAE,mBAAK,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAiB,QAAA,SAAS,EAAEP,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADA;AAMD;;AAED,wBAEE,uDACA,oBAAC,QAAD;AAAU,MAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGM,MADH,CADA,CAFF;AAUH;;AA7B2B;;AA+B5B,MAAMG,eAAe,GAACC,KAAK,IAAE;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAM;AACJF,IAAAA,eAAe,EAACE,KAAK,CAACG,KAAN,KAAgB;AAD5B,GAAN;AAGD,CALD;;AAMA,eAAejB,UAAU,CAACK,OAAO,CAACQ,eAAD,CAAP,CAAyBL,GAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component,lazy,Suspense } from 'react';\nimport {withRouter,Route,Switch, Redirect} from 'react-router-dom'\nimport Blog from './containers/Blog/Blog';\nimport {connect} from 'react-redux';\nconst Auth = lazy(() => import('./containers/Auth/Auth'));\nconst Logout = lazy(()=>import('./containers/Auth/Logout/Logout'));\nclass App extends Component {\n \n  render(){\n    let routes=null;\n    routes=(\n    <Switch>\n      <Route path=\"/login\"  render={props => <Auth {...props} />} />\n      <Route path=\"/\"  component={Blog} />\n    </Switch>);\n\n    if(this.props.isAuthenticated){\n      routes=(\n      <Switch>\n        <Route path=\"/login\"  render={props => <Auth {...props} />} />\n        <Route path=\"/logout\" render={() =><Logout/>} />\n        <Route path=\"/\"  component={Blog} />\n      </Switch>);\n    }\n\n    return (\n      \n      <>\n      <Suspense fallback={<p>Loading...</p>}>\n        {routes}\n      </Suspense>\n      </>\n      \n    );\n  \n}\n}\nconst mapStateToProps=state=>{\n  console.log(state)\n  return{\n    isAuthenticated:state.token !== null\n  }\n}\nexport default withRouter(connect(mapStateToProps)(App));\n\n"]},"metadata":{},"sourceType":"module"}