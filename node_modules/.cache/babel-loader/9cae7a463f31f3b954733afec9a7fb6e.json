{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport { connect } from 'react-redux';\nimport Allposts from '../../components/Allposts/Allposts';\nimport { Menu, Segment, Button } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Axios from '../../axios-orders';\n\nclass blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: {\n        title: '',\n        content: '',\n        userId: ''\n      },\n      fetchedposts: []\n    };\n\n    this.inputHandler = event => {\n      let updatedPost = { ...this.state.post\n      };\n      updatedPost[event.target.name] = event.target.value;\n      this.setState({\n        post: updatedPost\n      }); // console.log(this.state.post);\n    };\n\n    this.savedDataToServerHandler = () => {\n      if (this.props.isAuthenticated) {\n        const postdata = { ...this.state.post,\n          userId: this.props.userid\n        }; // console.log(this.props.token);\n\n        Axios.post('/posts.json?auth=' + this.props.isAuthenticated, postdata).then(response => {\n          // console.log( response.data );\n          this.setState(previousstate => previousstate.fetchedposts.push({ ...postdata,\n            id: response.data.name\n          })); // console.log(this.state.fetchedposts);\n        });\n      } else {\n        this.props.history.push('/login');\n      }\n    };\n\n    this.deleteHandler = id => {\n      console.log(id);\n\n      if (window.confirm('Are you sure you want to delete?') === true) {\n        Axios.delete(`posts/${id}.json`).then(response => {\n          // console.log(response);\n          Axios.get('/posts.json').then(response => {\n            // console.log(response);\n            // console.log(\"userId data...\");\n            const fetchedPostsFromServer = [];\n\n            for (let key in response.data) {\n              fetchedPostsFromServer.push({ ...response.data[key],\n                id: key\n              });\n            }\n\n            this.setState({\n              fetchedposts: fetchedPostsFromServer\n            });\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isAuthenticated) {\n      const queryParams = '?auth=' + this.props.isAuthenticated + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"'; // console.log(queryParams);\n      // Axios.get('/posts.json' +queryParams)\n      // .then( response => {\n      //     const fetchedPostsFromServer = [];\n      //     // console.log(res.data);\n      //     for ( let key in response.data ) {\n      //         fetchedPostsFromServer.push( {\n      //             ...response.data[key],\n      //             id: key\n      //         } );\n      //         this.setState({fetchedposts:fetchedPostsFromServer});\n      //         // console.log(fetchedOrders);\n      //         // console.log(this.state.fetchedposts);\n      //     }})\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, this.props.isAuthenticated ?\n    /*#__PURE__*/\n    // (<Menu.Item position=\"left\">\n    //     <Sidebar />\n    // </Menu.Item>)\n    React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"Posts\"), /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, \"Log out\")) : /*#__PURE__*/React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, \"Log In\")))), /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Newpost, {\n      onInputChange: event => this.inputHandler(event),\n      savedDataToServer: this.savedDataToServerHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 64\n      }\n    }), /*#__PURE__*/React.createElement(Allposts, {\n      posts: this.state.fetchedposts,\n      deletepost: this.deleteHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuthenticated: state.token,\n    userid: state.userId\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(blog));","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js"],"names":["React","Component","Newpost","connect","Allposts","Menu","Segment","Button","Link","withRouter","Axios","blog","state","post","title","content","userId","fetchedposts","inputHandler","event","updatedPost","target","name","value","setState","savedDataToServerHandler","props","isAuthenticated","postdata","userid","then","response","previousstate","push","id","data","history","deleteHandler","console","log","window","confirm","delete","get","fetchedPostsFromServer","key","componentDidMount","queryParams","render","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport { connect } from 'react-redux';\nimport Allposts from '../../components/Allposts/Allposts';\nimport {Menu,Segment,Button} from 'semantic-ui-react';\nimport {Link,withRouter} from 'react-router-dom';\nimport Axios from '../../axios-orders';\nclass blog extends Component{\n    state={\n        post:{\n            title:'',\n            content:'',\n            userId:''\n        },\n        fetchedposts:[],\n        \n    }\n    componentDidMount(){\n        if(this.props.isAuthenticated){\n            const queryParams = '?auth=' + this.props.isAuthenticated + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n            // console.log(queryParams);\n            // Axios.get('/posts.json' +queryParams)\n            // .then( response => {\n            //     const fetchedPostsFromServer = [];\n            //     // console.log(res.data);\n            //     for ( let key in response.data ) {\n            //         fetchedPostsFromServer.push( {\n            //             ...response.data[key],\n            //             id: key\n            //         } );\n            //         this.setState({fetchedposts:fetchedPostsFromServer});\n            //         // console.log(fetchedOrders);\n            //         // console.log(this.state.fetchedposts);\n            //     }})\n                }\n    }\n     \n    inputHandler=(event)=>{\n        let updatedPost={...this.state.post};\n        updatedPost[event.target.name]=event.target.value;\n        this.setState({post:updatedPost});\n        // console.log(this.state.post);\n    }\n    savedDataToServerHandler=()=>{\n        if(this.props.isAuthenticated){\n        const postdata={...this.state.post,userId:this.props.userid};\n        // console.log(this.props.token);\n        Axios.post('/posts.json?auth=' + this.props.isAuthenticated,postdata)\n        .then( response => {\n            // console.log( response.data );\n            this.setState(previousstate=>(\n                previousstate.fetchedposts.push({...postdata,id:response.data.name})\n            ));\n            // console.log(this.state.fetchedposts);\n        } )}\n        else{\n            this.props.history.push('/login');\n        }\n    }\n    deleteHandler=(id)=>{\n        console.log(id);\n        if(window.confirm('Are you sure you want to delete?') === true){\n        Axios.delete(`posts/${id}.json`)\n            .then(response =>{\n                // console.log(response);\n                Axios.get('/posts.json')\n                .then(response => {\n                  \n                    // console.log(response);\n                    // console.log(\"userId data...\");\n                    \n                     const fetchedPostsFromServer=[];\n                     for(let key in response.data) {\n                        fetchedPostsFromServer.push({\n                             ...response.data[key],\n                             id:key\n                         });\n                     }\n                     this.setState({fetchedposts:fetchedPostsFromServer})\n        }\n        )})}}\n    render(){\n    return(\n        <div>\n            <Segment inverted>\n            <Menu inverted pointing secondary>\n            {this.props.isAuthenticated ?\n            \n            // (<Menu.Item position=\"left\">\n            //     <Sidebar />\n            // </Menu.Item>)\n            (<Menu.Item position=\"right\">\n           \n                <Button class=\"ui button\" color=\"grey\" as={Link} to ='/'>Posts</Button>\n                <Button class=\"ui button\" color=\"grey\" as={Link} to ='/logout'>Log out</Button>\n        \n            </Menu.Item>) :\n                (<Menu.Item position=\"right\">\n                    <Button class=\"ui button\" color=\"grey\" as={Link} to ='/login'>Log In</Button>\n      \n                </Menu.Item>)\n            \n            }\n\n            </Menu>\n            </Segment>\n            \n            <Segment textAlign=\"center\">\n            \n            <Newpost onInputChange={(event)=>this.inputHandler(event)}\n            savedDataToServer={this.savedDataToServerHandler}/><br></br>\n            <Allposts posts={this.state.fetchedposts} deletepost={this.deleteHandler}/>\n            </Segment>\n        </div>\n    );\n}\n}\nconst mapStateToProps= state =>{\n    console.log(state);\n    return{\n        isAuthenticated:state.token,\n        userid:state.userId\n    }\n}\nexport default withRouter(connect(mapStateToProps)(blog));"]},"metadata":{},"sourceType":"module"}