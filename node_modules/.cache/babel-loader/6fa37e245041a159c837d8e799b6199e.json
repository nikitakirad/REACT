{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/Container/Auth.js\";\nimport React, { Component } from 'react';\nimport { Button, Segment } from 'semantic-ui-react';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formdata: {\n        email: {\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false\n        },\n        password: {\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false,\n          touched: false\n        }\n      },\n      isSignup: true\n    };\n\n    this.inputChangeHandler = event => {\n      const updatedFormdata = { ...this.state.formdata,\n        [event.target.name]: { ...this.state.formdata[event.target.name],\n          value: event.target.value,\n          valid: this.checkValidity(event.target.value, this.state.formdata[event.target.name].validation),\n          touched: true\n        }\n      };\n      this.setState({\n        formdata: updatedFormdata\n      });\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      onChange: this.inputChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 109\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Password \",\n      name: \"password\",\n      onChange: this.inputChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 119\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 124\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      color: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Auth;","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/Container/Auth.js"],"names":["React","Component","Button","Segment","Auth","state","formdata","email","validation","required","isEmail","valid","touched","password","minLength","isSignup","inputChangeHandler","event","updatedFormdata","target","name","value","checkValidity","setState","rules","isValid","trim","length","maxLength","pattern","test","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button,Segment} from 'semantic-ui-react';\nclass Auth extends Component{\n    state={\n        formdata:{\n            email: {\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            }\n        },\n        isSignup: true\n    }\n    checkValidity ( value, rules ) {\n        let isValid = true;\n        if ( !rules ) {\n            return true;\n        }\n\n        if ( rules.required ) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if ( rules.minLength ) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if ( rules.maxLength ) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n        if ( rules.isEmail ) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test( value ) && isValid\n        }\n        \n\n        return isValid;\n    }\n    inputChangeHandler=(event)=>{\n        const updatedFormdata = {\n            ...this.state.formdata,\n            [event.target.name]: {\n                ...this.state.formdata[event.target.name],\n                value: event.target.value,\n                valid: this.checkValidity( event.target.value, this.state.formdata[event.target.name].validation ),\n                touched: true\n            }\n        };\n        this.setState( { formdata: updatedFormdata} );\n    }\n    render(){\n        \n        return(\n            <div>\n            <Segment textAlign=\"center\">\n            <input type=\"email\" placeholder=\"Email\" name=\"email\" onChange={this.inputChangeHandler}></input><br />\n            <input type=\"password\" placeholder=\"Password \" name=\"password\" onChange={this.inputChangeHandler}></input><br/><br/>\n            <Button color=\"blue\" >Submit</Button>\n            </Segment>\n            </div>\n        )\n    }\n}\n\n    \n\nexport default Auth;"]},"metadata":{},"sourceType":"module"}