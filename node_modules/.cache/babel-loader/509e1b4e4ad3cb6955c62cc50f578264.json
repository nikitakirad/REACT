{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/components/UI/Input/Input.js\";\nimport React from 'react';\nimport { Input, TextArea, Form } from 'semantic-ui-react';\nimport classes from './Input.css';\n\nconst input = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  let validationError = null;\n\n  if (props.invalid && props.touched) {\n    validationError = /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 27\n      }\n    }, \"Please enter a valid value!\");\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Input, Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      })));\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, \"Title:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 38\n        }\n      }), /*#__PURE__*/React.createElement(TextArea, Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      })));\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/React.createElement(Form.Field, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }\n      }, \"Description:\"), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(Input, Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      })));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: classes.Label,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, props.label), validationError, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, inputElement));\n};\n\nexport default input;","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/components/UI/Input/Input.js"],"names":["React","Input","TextArea","Form","classes","input","props","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","validationError","elementType","join","elementConfig","value","changed","Label","label"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,EAAcC,QAAd,EAAuBC,IAAvB,QAAkC,mBAAlC;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,KAAK,GAAKC,KAAF,IAAa;AACvB,MAAIC,YAAY,GAAG,IAAnB;AACA,QAAMC,YAAY,GAAG,CAACJ,OAAO,CAACK,YAAT,CAArB;;AAEA,MAAIH,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACK,cAAvB,IAAyCL,KAAK,CAACM,OAAnD,EAA4D;AACxDJ,IAAAA,YAAY,CAACK,IAAb,CAAkBT,OAAO,CAACU,OAA1B;AACH;;AACD,MAAIC,eAAe,GAAG,IAAtB;;AACA,MAAIT,KAAK,CAACI,OAAN,IAAiBJ,KAAK,CAACM,OAA3B,EAAoC;AAChCG,IAAAA,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAAlB;AACH;;AACD,UAAST,KAAK,CAACU,WAAf;AACI,SAAO,OAAP;AACIT,MAAAA,YAAY,gBACZ,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,KAAD;AACI,QAAA,SAAS,EAAEC,YAAY,CAACS,IAAb,CAAkB,GAAlB;AADf,SAEQX,KAAK,CAACY,aAFd;AAGI,QAAA,KAAK,EAAEZ,KAAK,CAACa,KAHjB;AAII,QAAA,QAAQ,EAAEb,KAAK,CAACc,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADA,CADA;AAOA;;AACJ,SAAO,UAAP;AACIb,MAAAA,YAAY,gBACR,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eACqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADrB,eAEA,oBAAC,QAAD;AACI,QAAA,SAAS,EAAEC,YAAY,CAACS,IAAb,CAAkB,GAAlB;AADf,SAEQX,KAAK,CAACY,aAFd;AAGI,QAAA,KAAK,EAAEZ,KAAK,CAACa,KAHjB;AAII,QAAA,QAAQ,EAAEb,KAAK,CAACc,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA,CADJ;AAQA;;AAEJ;AACIb,MAAAA,YAAY,gBACZ,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAC2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD3B,eAEA,oBAAC,KAAD;AACI,QAAA,SAAS,EAAEC,YAAY,CAACS,IAAb,CAAkB,GAAlB;AADf,SAEQX,KAAK,CAACY,aAFd;AAGI,QAAA,KAAK,EAAEZ,KAAK,CAACa,KAHjB;AAII,QAAA,QAAQ,EAAEb,KAAK,CAACc,OAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFA,CADA;AAtBR;;AAgCA,sBACI;AAAK,IAAA,SAAS,EAAEhB,OAAO,CAACH,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,SAAS,EAAEG,OAAO,CAACiB,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCf,KAAK,CAACgB,KAAxC,CADJ,EAEKP,eAFL,eAGI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCR,YADD,CAHJ,CADJ;AAUH,CArDD;;AAuDA,eAAeF,KAAf","sourcesContent":["import React from 'react';\nimport {Input,TextArea,Form} from 'semantic-ui-react';\nimport classes from './Input.css';\n\nconst input = ( props ) => {\n    let inputElement = null;\n    const inputClasses = [classes.InputElement];\n\n    if (props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid);\n    }\n    let validationError = null;\n    if (props.invalid && props.touched) {\n        validationError = <p>Please enter a valid value!</p>;\n    }\n    switch ( props.elementType ) {\n        case ( 'input' ):\n            inputElement =(\n            <Form.Field>\n            <Input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} /></Form.Field>);\n            break;\n        case ( 'textarea' ):\n            inputElement =( \n                <Form.Field>\n                <label>Title:</label><br></br>\n                <TextArea\n                    className={inputClasses.join(' ')}\n                    {...props.elementConfig}\n                    value={props.value}\n                    onChange={props.changed} /></Form.Field>);\n            break;\n        \n        default:\n            inputElement = \n            <Form.Field>\n            <label>Description:</label><br></br>\n            <Input\n                className={inputClasses.join(' ')}\n                {...props.elementConfig}\n                value={props.value}\n                onChange={props.changed} /></Form.Field>;\n    }\n\n    return (\n        <div className={classes.Input}>\n            <label className={classes.Label}>{props.label}</label>\n            {validationError}\n            <Form>\n            {inputElement}\n            </Form>\n        </div>\n    );\n\n};\n\nexport default input;"]},"metadata":{},"sourceType":"module"}