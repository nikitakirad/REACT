{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport { connect } from 'react-redux';\nimport Allposts from '../../components/Allposts/Allposts';\nimport { Menu, Segment, Button, Icon, Sidebar } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Axios from '../../axios-orders'; // import Sidebar from '../../components/UI/Sidebar/Sidebar'\n\nclass blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: {\n        title: '',\n        content: '',\n        userId: ''\n      },\n      fetchedposts: [],\n      menuVisible: false\n    };\n\n    this.inputHandler = event => {\n      let updatedPost = { ...this.state.post\n      };\n      updatedPost[event.target.name] = event.target.value;\n      this.setState({\n        post: updatedPost\n      }); // console.log(this.state.post);\n    };\n\n    this.savedDataToServerHandler = () => {\n      if (this.props.isAuthenticated) {\n        const postdata = { ...this.state.post,\n          userId: this.props.userid\n        }; // console.log(this.props.token);\n\n        Axios.post('/posts.json?auth=' + this.props.isAuthenticated, postdata).then(response => {\n          // console.log( response.data );\n          alert(\"Successfully added...\");\n          this.setState(previousstate => previousstate.fetchedposts.push({ ...postdata,\n            id: response.data.name\n          })); // console.log(this.state.fetchedposts);\n        });\n      } else {\n        this.props.history.push('/login');\n      }\n    };\n\n    this.deleteHandler = id => {\n      console.log(id);\n\n      if (window.confirm('Are you sure you want to delete?') === true) {\n        Axios.delete(`posts/${id}.json`).then(response => {\n          alert(\"Successfully deleted...\");\n          let updateFetchedPostAfterDelete = [];\n\n          for (let key in this.state.fetchedposts) {\n            if (this.state.fetchedposts[key].id !== id) {\n              updateFetchedPostAfterDelete.push(this.state.fetchedposts[key]); // console.log(updateFetchedPostAfterDelete);\n            }\n          } // console.log(updateFetchedPostAfterDelete);\n\n\n          this.setState({\n            fetchedposts: updateFetchedPostAfterDelete\n          });\n        });\n      }\n    };\n\n    this.storeEditedPostOnServer = {\n      title: '',\n      content: ''\n    };\n\n    this.editHandler = (id, event) => {\n      // console.log(event);\n      // console.log(id);\n      let editParticularPost = [...this.state.fetchedposts]; // console.log(this.storeEditedPostOnServer);\n\n      for (let key in editParticularPost) {\n        if (editParticularPost[key].id === id) {\n          this.storeEditedPostOnServer = { ...editParticularPost[key]\n          };\n          editParticularPost[key][event.target.name] = event.target.value;\n          this.storeEditedPostOnServer[event.target.name] = event.target.value;\n        }\n      } // console.log(editParticularPost);\n\n\n      this.setState({\n        fetchedposts: editParticularPost\n      }); // console.log(this.storeEditedPostOnServer);\n    };\n\n    this.updateValueToServer = id => {\n      console.log(id);\n      Axios.patch(`posts/${id}.json`, this.storeEditedPostOnServer).then(response => {\n        console.log(response);\n        alert(\"Successfully edited...\");\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.isAuthenticated) {\n      const queryParams = '?auth=' + this.props.isAuthenticated + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"'; // console.log(queryParams);\n\n      Axios.get('/posts.json' + queryParams).then(response => {\n        const fetchedPostsFromServer = []; // console.log(res.data);\n\n        for (let key in response.data) {\n          fetchedPostsFromServer.push({ ...response.data[key],\n            id: key\n          });\n          this.setState({\n            fetchedposts: fetchedPostsFromServer\n          }); // console.log(fetchedOrders);\n          // console.log(this.state.fetchedposts);\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      attached: \"top\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      onClick: () => this.setState({\n        menuVisible: !this.state.menuVisible\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"sidebar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }\n    }), \"Menu\")), /*#__PURE__*/React.createElement(Sidebar.Pushable, {\n      as: Segment,\n      attached: \"bottom\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Sidebar, {\n      as: Menu,\n      animation: \"uncover\",\n      visible: this.state.menuVisible,\n      icon: \"labeled\",\n      vertical: true,\n      inline: true,\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 20\n      }\n    }), \"Home\"), /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"block layout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 20\n      }\n    }), \"Topics\"), /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"smile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 20\n      }\n    }), \"Friends\"), /*#__PURE__*/React.createElement(Menu.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      name: \"calendar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 20\n      }\n    }), \"History\")), /*#__PURE__*/React.createElement(Sidebar.Pusher, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, this.props.isAuthenticated ? /*#__PURE__*/React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"grey\",\n      as: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }, \"Posts\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"grey\",\n      as: Link,\n      to: \"/logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Log out\")) : /*#__PURE__*/React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"grey\",\n      as: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, \"Log In\")))))), /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Newpost, {\n      onInputChange: event => this.inputHandler(event),\n      savedDataToServer: this.savedDataToServerHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 64\n      }\n    }), /*#__PURE__*/React.createElement(Allposts, {\n      posts: this.state.fetchedposts,\n      deletepost: this.deleteHandler,\n      editpost: this.editHandler,\n      edit: this.updateValueToServer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    isAuthenticated: state.token,\n    userid: state.userId\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(blog));","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js"],"names":["React","Component","Newpost","connect","Allposts","Menu","Segment","Button","Icon","Sidebar","Link","withRouter","Axios","blog","state","post","title","content","userId","fetchedposts","menuVisible","inputHandler","event","updatedPost","target","name","value","setState","savedDataToServerHandler","props","isAuthenticated","postdata","userid","then","response","alert","previousstate","push","id","data","history","deleteHandler","console","log","window","confirm","delete","updateFetchedPostAfterDelete","key","storeEditedPostOnServer","editHandler","editParticularPost","updateValueToServer","patch","catch","error","componentDidMount","queryParams","get","fetchedPostsFromServer","render","mapStateToProps","token"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport { connect } from 'react-redux';\nimport Allposts from '../../components/Allposts/Allposts';\nimport {Menu,Segment,Button,Icon,Sidebar} from 'semantic-ui-react';\nimport {Link,withRouter} from 'react-router-dom';\nimport Axios from '../../axios-orders';\n// import Sidebar from '../../components/UI/Sidebar/Sidebar'\nclass blog extends Component{\n    state={\n        post:{\n            title:'',\n            content:'',\n            userId:''\n        },\n        fetchedposts:[],\n        menuVisible: false\n    }\n    componentDidMount(){\n        if(this.props.isAuthenticated){\n            const queryParams = '?auth=' + this.props.isAuthenticated + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n            // console.log(queryParams);\n            Axios.get('/posts.json' +queryParams)\n            .then( response => {\n                const fetchedPostsFromServer = [];\n                // console.log(res.data);\n                for ( let key in response.data ) {\n                    fetchedPostsFromServer.push( {\n                        ...response.data[key],\n                        id: key\n                    } );\n                    this.setState({fetchedposts:fetchedPostsFromServer});\n                    // console.log(fetchedOrders);\n                    // console.log(this.state.fetchedposts);\n                }})\n        }\n    }\n     \n    inputHandler=(event)=>{\n        let updatedPost={...this.state.post};\n        updatedPost[event.target.name]=event.target.value;\n        this.setState({post:updatedPost});\n        // console.log(this.state.post);\n    }\n    savedDataToServerHandler=()=>{\n        if(this.props.isAuthenticated){\n        const postdata={...this.state.post,userId:this.props.userid};\n        // console.log(this.props.token);\n        Axios.post('/posts.json?auth=' + this.props.isAuthenticated,postdata)\n        .then( response => {\n            // console.log( response.data );\n            alert(\"Successfully added...\");\n\n            this.setState(previousstate=>(\n                previousstate.fetchedposts.push({...postdata,id:response.data.name})\n            ));\n            // console.log(this.state.fetchedposts);\n        } )}\n        else{\n            this.props.history.push('/login');\n        }\n    }\n    deleteHandler=(id)=>{\n        console.log(id);\n        if(window.confirm('Are you sure you want to delete?') === true){\n        Axios.delete(`posts/${id}.json`)\n            .then(response =>{\n                alert(\"Successfully deleted...\");\n\n                let updateFetchedPostAfterDelete=[];\n                for(let key in this.state.fetchedposts){\n                    if(this.state.fetchedposts[key].id !== id){\n                        updateFetchedPostAfterDelete.push(this.state.fetchedposts[key]);\n                        // console.log(updateFetchedPostAfterDelete);\n                    }\n                }\n                // console.log(updateFetchedPostAfterDelete);\n                this.setState({fetchedposts:updateFetchedPostAfterDelete})\n    })}}\n    storeEditedPostOnServer={\n        title:'',\n        content:''\n    }\n    editHandler=(id,event)=>{\n        // console.log(event);\n        // console.log(id);\n        let editParticularPost=[...this.state.fetchedposts]\n       \n        // console.log(this.storeEditedPostOnServer);\n       \n        for(let key in editParticularPost){\n            if(editParticularPost[key].id === id ){\n                this.storeEditedPostOnServer={...editParticularPost[key]}\n                editParticularPost[key][event.target.name]=event.target.value;\n                this.storeEditedPostOnServer[event.target.name]=event.target.value;\n                \n            }\n        }\n        // console.log(editParticularPost);\n        this.setState({fetchedposts:editParticularPost});\n        // console.log(this.storeEditedPostOnServer);\n    }\n    updateValueToServer=(id)=>{\n        console.log(id);\n        Axios.patch(`posts/${id}.json`,this.storeEditedPostOnServer)\n        .then(response => {\n                console.log(response)\n                alert(\"Successfully edited...\");\n                \n                })\n        .catch(error => {\n                    console.log(error)\n        })\n    }\n    render(){\n\n    return(\n        <div>\n       \n       <Menu inverted pointing secondary attached=\"top\">\n        <Menu.Item onClick={() => this.setState({ menuVisible: !this.state.menuVisible })} >\n          <Icon name=\"sidebar\" />Menu\n        </Menu.Item>          \n      </Menu>\n    <Sidebar.Pushable as={Segment} attached=\"bottom\" >\n      <Sidebar as={Menu} animation=\"uncover\" visible={this.state.menuVisible} icon=\"labeled\" vertical inline inverted>\n        <Menu.Item><Icon name=\"home\" />Home</Menu.Item>\n        <Menu.Item><Icon name=\"block layout\" />Topics</Menu.Item>\n        <Menu.Item><Icon name=\"smile\" />Friends</Menu.Item>\n        <Menu.Item><Icon name=\"calendar\" />History</Menu.Item>    \n      </Sidebar>\n       <Sidebar.Pusher>\n            <Segment inverted>\n            \n               \n            <Menu inverted pointing secondary>\n            {this.props.isAuthenticated ?\n            \n           \n            (<Menu.Item position=\"right\">\n           \n                <Button  color=\"grey\" as={Link} to ='/'>Posts</Button>\n                <Button  color=\"grey\" as={Link} to ='/logout'>Log out</Button>\n        \n            </Menu.Item>) :\n                (<Menu.Item position=\"right\">\n                    <Button  color=\"grey\" as={Link} to ='/login'>Log In</Button>\n      \n                </Menu.Item>)\n               \n            \n            }\n\n            </Menu>\n            </Segment>\n            </Sidebar.Pusher>\n    </Sidebar.Pushable>\n            <Segment textAlign=\"center\">\n            \n            <Newpost onInputChange={(event)=>this.inputHandler(event)}\n            savedDataToServer={this.savedDataToServerHandler}/><br></br>\n            <Allposts posts={this.state.fetchedposts} \n            deletepost={this.deleteHandler}\n            editpost={this.editHandler}\n            edit={this.updateValueToServer}/>\n            </Segment>\n           \n       \n        </div>\n    );\n}\n}\nconst mapStateToProps= state =>{\n    console.log(state);\n    return{\n        isAuthenticated:state.token,\n        userid:state.userId\n    }\n}\nexport default withRouter(connect(mapStateToProps)(blog));"]},"metadata":{},"sourceType":"module"}