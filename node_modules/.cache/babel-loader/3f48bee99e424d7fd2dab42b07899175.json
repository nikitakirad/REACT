{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport { connect } from 'react-redux';\nimport Allposts from '../../components/Allposts/Allposts';\nimport { Menu, Segment, Button, Message, Container } from 'semantic-ui-react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\n\nclass blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: {\n        title: '',\n        content: '',\n        userId: ''\n      },\n      fetchedposts: [],\n      loading: false\n    };\n\n    this.inputHandler = event => {\n      let updatedstate = { ...this.state.post\n      };\n      updatedstate[event.target.name] = event.target.value;\n      this.setState({\n        post: updatedstate\n      }); // console.log(this.state.post);\n    };\n\n    this.saveddata = () => {\n      if (this.props.token) {\n        const postdata = { ...this.state.post,\n          userId: this.props.userid\n        }; // console.log(this.props.token);\n\n        this.setState({\n          loading: true\n        });\n        Axios.post('/posts?auth=' + this.props.token, postdata).then(response => {\n          // console.log( response.data );\n          this.setState(prevstate => prevstate.fetchedposts.push({ ...postdata,\n            id: response.data.name\n          }));\n          this.setState({\n            loading: false\n          }); // console.log(this.state.fetchedposts);\n        });\n      } else {\n        this.props.history.push('/login');\n      }\n    };\n\n    this.deleteHandler = id => {\n      console.log(id);\n\n      if (window.confirm('Are you sure you want to delete?') === true) {\n        this.setState({\n          loading: true\n        });\n        Axios.delete(`posts/${id}.json`).then(response => {\n          console.log(response);\n          Axios.get('/posts.json').then(response => {\n            // console.log(response);\n            // console.log(\"userId data...\");\n            const fetchedPostsFromServer = [];\n\n            for (let key in response.data) {\n              fetchedPostsFromServer.push({ ...response.data[key],\n                id: key\n              });\n            }\n\n            this.setState({\n              fetchedposts: fetchedPostsFromServer,\n              loading: false\n            });\n          });\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.token) {\n      const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"'; // console.log(queryParams);\n\n      this.setState({\n        loading: true\n      });\n      Axios.get('/posts.json' + queryParams).then(res => {\n        const fetchedPostsFromServer = [];\n        console.log(res.data);\n\n        for (let key in res.data) {\n          fetchedPostsFromServer.push({ ...res.data[key],\n            id: key\n          });\n          this.setState({\n            fetchedposts: fetchedPostsFromServer,\n            loading: false\n          }); // console.log(fetchedOrders);\n          // console.log(this.state.fetchedposts);\n        }\n      });\n    }\n  }\n\n  render() {\n    let newpost = this.state.loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(Newpost, {\n      oninputHandler: event => this.inputHandler(event),\n      onsaveddata: this.saveddata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 52\n      }\n    });\n    let allpost = this.state.loading ? /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 40\n      }\n    }) : /*#__PURE__*/React.createElement(Allposts, {\n      posts: this.state.fetchedposts,\n      deletepost: this.deleteHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 52\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, this.props.token ?\n    /*#__PURE__*/\n    // (<Menu.Item position=\"left\">\n    //     <Sidebar />\n    // </Menu.Item>)\n    React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Posts\"), /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, \"Log out\")) : /*#__PURE__*/React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, \"Log In\")))), /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, newpost, allpost));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    token: state.token,\n    userid: state.userId\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(blog));","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js"],"names":["React","Component","Newpost","connect","Allposts","Menu","Segment","Button","Message","Container","Link","withRouter","Axios","Spinner","blog","state","post","title","content","userId","fetchedposts","loading","inputHandler","event","updatedstate","target","name","value","setState","saveddata","props","token","postdata","userid","then","response","prevstate","push","id","data","history","deleteHandler","console","log","window","confirm","delete","get","fetchedPostsFromServer","key","componentDidMount","queryParams","res","render","newpost","allpost","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport { connect } from 'react-redux';\nimport Allposts from '../../components/Allposts/Allposts';\nimport {Menu,Segment,Button, Message, Container} from 'semantic-ui-react';\nimport {Link,withRouter} from 'react-router-dom';\nimport Axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nclass blog extends Component{\n    state={\n        post:{\n            title:'',\n            content:'',\n            userId:''\n        },\n        fetchedposts:[],\n        loading:false\n    }\n    componentDidMount(){\n        if(this.props.token){\n            const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n            // console.log(queryParams);\n            this.setState({loading:true});\n            Axios.get('/posts.json' +queryParams)\n            .then( res => {\n                const fetchedPostsFromServer = [];\n                console.log(res.data);\n                for ( let key in res.data ) {\n                    fetchedPostsFromServer.push( {\n                        ...res.data[key],\n                        id: key\n                    } );\n                    this.setState({fetchedposts:fetchedPostsFromServer,loading:false});\n                    // console.log(fetchedOrders);\n                    // console.log(this.state.fetchedposts);\n                }})\n               }\n    }\n     \n    inputHandler=(event)=>{\n        let updatedstate={...this.state.post};\n        updatedstate[event.target.name]=event.target.value;\n        this.setState({post:updatedstate})\n        // console.log(this.state.post);\n    }\n    saveddata=()=>{\n        if(this.props.token){\n        const postdata={...this.state.post,userId:this.props.userid};\n        // console.log(this.props.token);\n        this.setState({loading:true});\n        Axios.post('/posts?auth=' + this.props.token,postdata)\n        .then( response => {\n            // console.log( response.data );\n            this.setState(prevstate=>(\n                prevstate.fetchedposts.push({...postdata,id:response.data.name})\n            ));\n            this.setState({loading:false});\n            // console.log(this.state.fetchedposts);\n        } )}\n        else{\n            this.props.history.push('/login');\n        }\n    }\n    deleteHandler=(id)=>{\n        console.log(id);\n        if(window.confirm('Are you sure you want to delete?') === true){\n        this.setState({loading:true});\n        Axios.delete(`posts/${id}.json`)\n            .then(response =>{\n                console.log(response);\n                Axios.get('/posts.json')\n                .then(response => {\n                  \n                    // console.log(response);\n                    // console.log(\"userId data...\");\n                    \n                     const fetchedPostsFromServer=[];\n                     for(let key in response.data) {\n                        fetchedPostsFromServer.push({\n                             ...response.data[key],\n                             id:key\n                         });\n                     }\n                     this.setState({fetchedposts:fetchedPostsFromServer,loading:false})\n        }\n        )})}}\n    render(){\n        let newpost=this.state.loading?<Spinner />:<Newpost oninputHandler={(event)=>this.inputHandler(event)}\n        onsaveddata={this.saveddata}/>\n\n        let allpost=this.state.loading?<Spinner />:<Allposts posts={this.state.fetchedposts} deletepost={this.deleteHandler}/>\n\n        \n    return(\n        <div>\n            <Segment inverted>\n            <Menu inverted pointing secondary>\n            {this.props.token ?\n            \n            // (<Menu.Item position=\"left\">\n            //     <Sidebar />\n            // </Menu.Item>)\n            (<Menu.Item position=\"right\">\n           \n                <Button class=\"ui button\" color=\"grey\" as={Link} to ='/'>Posts</Button>\n                <Button class=\"ui button\" color=\"grey\" as={Link} to ='/logout'>Log out</Button>\n        \n            </Menu.Item>) :\n                (<Menu.Item position=\"right\">\n                    <Button class=\"ui button\" color=\"grey\" as={Link} to ='/login'>Log In</Button>\n      \n                </Menu.Item>)\n            \n            }\n\n            </Menu>\n            </Segment>\n            \n            <Segment textAlign=\"center\">\n            \n            {newpost}\n            {allpost}\n            </Segment>\n        </div>\n    );\n}\n}\nconst mapStateToProps= state =>{\n    console.log(state);\n    return{\n        token:state.token,\n        userid:state.userId\n    }\n}\nexport default withRouter(connect(mapStateToProps)(blog));"]},"metadata":{},"sourceType":"module"}