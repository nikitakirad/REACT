{"ast":null,"code":"import axios from 'axios';\nimport * as actionTypes from './actionTypes';\nexport const authStart = () => {\n  return {\n    type: actionTypes.AUTH_START\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    idToken: token,\n    userId: userId\n  };\n};\nexport const authFail = error => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  };\n};\nexport const logout = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('expirationDate');\n  localStorage.removeItem('userId');\n  return {\n    type: actionTypes.AUTH_LOGOUT\n  };\n};\nexport const auth = (email, password, isSignup) => {\n  return dispatch => {\n    dispatch(authStart());\n    const authData = {\n      email: email,\n      password: password,\n      returnSecureToken: true\n    };\n    let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyD_6aXMBJu31iIpeNxPC1Tw2gCs9ugwWI0';\n    axios.post(url, authData).then(response => {\n      console.log(response);\n      localStorage.setItem('token', response.data.idToken);\n      localStorage.setItem('expirationDate', expirationDate);\n      localStorage.setItem('userId', response.data.localId);\n      dispatch(authSuccess(response.data.idToken, response.data.localId));\n    }).catch(err => {\n      dispatch(authFail(err));\n    });\n  };\n};","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/store/actions/auth.js"],"names":["axios","actionTypes","authStart","type","AUTH_START","authSuccess","token","userId","AUTH_SUCCESS","idToken","authFail","error","AUTH_FAIL","logout","localStorage","removeItem","AUTH_LOGOUT","auth","email","password","isSignup","dispatch","authData","returnSecureToken","url","post","then","response","console","log","setItem","data","expirationDate","localId","catch","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAO;AACHC,IAAAA,IAAI,EAAEF,WAAW,CAACG;AADf,GAAP;AAGH,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1C,SAAO;AACHJ,IAAAA,IAAI,EAAEF,WAAW,CAACO,YADf;AAEHC,IAAAA,OAAO,EAAEH,KAFN;AAGHC,IAAAA,MAAM,EAAEA;AAHL,GAAP;AAKH,CANM;AAQP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACHR,IAAAA,IAAI,EAAEF,WAAW,CAACW,SADf;AAEHD,IAAAA,KAAK,EAAEA;AAFJ,GAAP;AAIH,CALM;AAOP,OAAO,MAAME,MAAM,GAAG,MAAM;AACxBC,EAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,gBAAxB;AACAD,EAAAA,YAAY,CAACC,UAAb,CAAwB,QAAxB;AACA,SAAO;AACHZ,IAAAA,IAAI,EAAEF,WAAW,CAACe;AADf,GAAP;AAGH,CAPM;AAQP,OAAO,MAAMC,IAAI,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,KAA+B;AAC/C,SAAOC,QAAQ,IAAI;AACfA,IAAAA,QAAQ,CAACnB,SAAS,EAAV,CAAR;AACA,UAAMoB,QAAQ,GAAG;AACbJ,MAAAA,KAAK,EAAEA,KADM;AAEbC,MAAAA,QAAQ,EAAEA,QAFG;AAGbI,MAAAA,iBAAiB,EAAE;AAHN,KAAjB;AAKA,QAAIC,GAAG,GAAG,uHAAV;AAEAxB,IAAAA,KAAK,CAACyB,IAAN,CAAWD,GAAX,EAAgBF,QAAhB,EACKI,IADL,CACUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAb,MAAAA,YAAY,CAACgB,OAAb,CAAqB,OAArB,EAA8BH,QAAQ,CAACI,IAAT,CAActB,OAA5C;AACAK,MAAAA,YAAY,CAACgB,OAAb,CAAqB,gBAArB,EAAuCE,cAAvC;AACAlB,MAAAA,YAAY,CAACgB,OAAb,CAAqB,QAArB,EAA+BH,QAAQ,CAACI,IAAT,CAAcE,OAA7C;AACAZ,MAAAA,QAAQ,CAAChB,WAAW,CAACsB,QAAQ,CAACI,IAAT,CAActB,OAAf,EAAwBkB,QAAQ,CAACI,IAAT,CAAcE,OAAtC,CAAZ,CAAR;AACH,KAPL,EAQKC,KARL,CAQWC,GAAG,IAAI;AACVd,MAAAA,QAAQ,CAACX,QAAQ,CAACyB,GAAD,CAAT,CAAR;AACH,KAVL;AAWH,GApBD;AAqBH,CAtBM","sourcesContent":["import axios from 'axios';\n\nimport * as actionTypes from './actionTypes';\n\nexport const authStart = () => {\n    return {\n        type: actionTypes.AUTH_START\n    };\n};\n\nexport const authSuccess = (token, userId) => {\n    return {\n        type: actionTypes.AUTH_SUCCESS,\n        idToken: token,\n        userId: userId\n    };\n};\n\nexport const authFail = (error) => {\n    return {\n        type: actionTypes.AUTH_FAIL,\n        error: error\n    };\n};\n\nexport const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    return {\n        type: actionTypes.AUTH_LOGOUT\n    };\n};\nexport const auth = (email, password, isSignup) => {\n    return dispatch => {\n        dispatch(authStart());\n        const authData = {\n            email: email,\n            password: password,\n            returnSecureToken: true\n        };\n        let url = 'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyD_6aXMBJu31iIpeNxPC1Tw2gCs9ugwWI0';\n        \n        axios.post(url, authData)\n            .then(response => {\n                console.log(response);\n                localStorage.setItem('token', response.data.idToken);\n                localStorage.setItem('expirationDate', expirationDate);\n                localStorage.setItem('userId', response.data.localId);\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\n            })\n            .catch(err => {\n                dispatch(authFail(err));\n            });\n    };\n};\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}