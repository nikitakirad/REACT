{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/App.js\";\nimport React, { Component } from 'react';\nimport Auth from './containers/Auth/Auth';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Blog from './containers/Blog/Blog';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(BrowserRouter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/login\",\n      component: Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/logout\",\n      component: Logout,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: Blog,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/App.js"],"names":["React","Component","Auth","BrowserRouter","Route","Switch","Blog","Logout","connect","App","render","mapStateToProps","state","isAuthenticated","auth","token","mapDispatchToProps","dispatch","onTryAutoSignup","actions","authCheckState"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAAQC,aAAR,EAAsBC,KAAtB,EAA4BC,MAA5B,QAAyC,kBAAzC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AACC,MAAMC,GAAN,SAAkBR,SAAlB,CAA4B;AAE3BS,EAAAA,MAAM,GAAE;AACN,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,uDACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAsB,MAAA,SAAS,EAAER,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAuB,MAAA,SAAS,EAAEK,MAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,KAAK,MAArB;AAAsB,MAAA,SAAS,EAAED,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADA,CADA,CADF;AAYH;;AAf4B;;AAkB5B,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAChC,SAAO;AACLC,IAAAA,eAAe,EAAED,KAAK,CAACE,IAAN,CAAWC,KAAX,KAAqB;AADjC,GAAP;AAGD,CAJA;;AAMD,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLC,IAAAA,eAAe,EAAE,MAAMD,QAAQ,CAAEE,OAAO,CAACC,cAAR,EAAF;AAD1B,GAAP;AAGD,CAJD;;AAMA,eAAgBZ,OAAO,CAAEG,eAAF,EAAmBK,kBAAnB,CAAP,CAAgDP,GAAhD,CAAhB","sourcesContent":["import React, { Component } from 'react';\nimport Auth from './containers/Auth/Auth';\nimport {BrowserRouter,Route,Switch} from 'react-router-dom'\nimport Blog from './containers/Blog/Blog';\nimport Logout from './containers/Auth/Logout/Logout';\nimport { connect } from 'react-redux';\n class App extends Component {\n \n  render(){\n    return (\n      <BrowserRouter>\n      <>\n      <Switch>\n        <Route path=\"/login\"  component={Auth} />\n        <Route path=\"/logout\"  component={Logout} />\n        <Route path=\"/\" exact component={Blog} />\n      </Switch>\n      </>\n      </BrowserRouter>\n    );\n  \n}\n }\n\n const mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoSignup: () => dispatch( actions.authCheckState() )\n  };\n};\n\nexport default  connect( mapStateToProps, mapDispatchToProps )( App ) ;\n\n"]},"metadata":{},"sourceType":"module"}