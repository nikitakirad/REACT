{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Auth/Auth.js\";\nimport React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport classes from './Auth.css';\nimport * as actions from '../../store/actions/index';\nimport { connect } from 'react-redux';\nimport { Button, Segment } from 'semantic-ui-react';\n\nclass Auth extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      controls: {\n        email: {\n          value: '',\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false\n        },\n        password: {\n          value: '',\n          validation: {\n            required: true,\n            minLength: 6\n          },\n          valid: false\n        }\n      },\n      isSignup: true\n    };\n\n    this.inputChangedHandler = event => {\n      console.log(event.target.value);\n      console.log(event.target.name);\n      const updatedControls = { ...this.state.controls,\n        [event.target.name]: { ...this.state.controls[event.target.name],\n          value: event.target.value,\n          valid: this.checkValidity(event.target.value, this.state.controls[event.target.name].validation)\n        }\n      };\n      this.setState({\n        controls: updatedControls\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\n    };\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n\n    if (!rules) {\n      return true;\n    }\n\n    if (rules.required) {\n      isValid = value.trim() !== '' && isValid;\n    }\n\n    if (rules.minLength) {\n      isValid = value.length >= rules.minLength && isValid;\n    }\n\n    if (rules.maxLength) {\n      isValid = value.length <= rules.maxLength && isValid;\n    }\n\n    if (rules.isEmail) {\n      const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n      isValid = pattern.test(value) && isValid;\n    }\n\n    return isValid;\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Input, {\n      key: formElement.id,\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })); // if (this.props.loading) {\n    //     form = <Spinner />\n    // }\n\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }\n      }, this.props.error.message);\n    }\n\n    let authredirect = null;\n\n    if (this.props.isAuthenticated) {\n      authredirect = this.props.history.push('/');\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.Auth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, errorMessage, authredirect, /*#__PURE__*/React.createElement(Segment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    }, \"EMAIL:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      placeholder: \"Enter Email-address\",\n      name: \"email\",\n      onChange: this.inputChangedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 30\n      }\n    }, \"PASSWORD:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 54\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      placeholder: \"Enter password\",\n      name: \"password\",\n      onChange: this.inputChangedHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.submitHandler,\n      color: \"grey\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 30\n      }\n    }, \"LOGIN\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.loading,\n    error: state.error,\n    isAuthenticated: state.token !== null\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Auth/Auth.js"],"names":["React","Component","Input","classes","actions","connect","Button","Segment","Auth","state","controls","email","value","validation","required","isEmail","valid","password","minLength","isSignup","inputChangedHandler","event","console","log","target","name","updatedControls","checkValidity","setState","submitHandler","preventDefault","props","onAuth","rules","isValid","trim","length","maxLength","pattern","test","render","formElementsArray","key","push","id","config","form","map","formElement","elementType","elementConfig","touched","errorMessage","error","message","authredirect","isAuthenticated","history","mapStateToProps","loading","token","mapDispatchToProps","dispatch","auth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,iCAAlB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,mBAAhC;;AAEA,MAAMC,IAAN,SAAmBP,SAAnB,CAA6B;AAAA;AAAA;AAAA,SACzBQ,KADyB,GACjB;AACJC,MAAAA,QAAQ,EAAE;AACNC,QAAAA,KAAK,EAAE;AACHC,UAAAA,KAAK,EAAC,EADH;AAEHC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERC,YAAAA,OAAO,EAAE;AAFD,WAFT;AAMHC,UAAAA,KAAK,EAAE;AANJ,SADD;AAUNC,QAAAA,QAAQ,EAAE;AACNL,UAAAA,KAAK,EAAE,EADD;AAENC,UAAAA,UAAU,EAAE;AACRC,YAAAA,QAAQ,EAAE,IADF;AAERI,YAAAA,SAAS,EAAE;AAFH,WAFN;AAMNF,UAAAA,KAAK,EAAE;AAND;AAVJ,OADN;AAqBJG,MAAAA,QAAQ,EAAE;AArBN,KADiB;;AAAA,SAsDzBC,mBAtDyB,GAsDDC,KAAF,IAAY;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaZ,KAAzB;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,IAAzB;AACA,YAAMC,eAAe,GAAG,EACpB,GAAG,KAAKjB,KAAL,CAAWC,QADM;AAEpB,SAACW,KAAK,CAACG,MAAN,CAAaC,IAAd,GAAqB,EACjB,GAAG,KAAKhB,KAAL,CAAWC,QAAX,CAAoBW,KAAK,CAACG,MAAN,CAAaC,IAAjC,CADc;AAEjBb,UAAAA,KAAK,EAAES,KAAK,CAACG,MAAN,CAAaZ,KAFH;AAGjBI,UAAAA,KAAK,EAAE,KAAKW,aAAL,CAAoBN,KAAK,CAACG,MAAN,CAAaZ,KAAjC,EAAwC,KAAKH,KAAL,CAAWC,QAAX,CAAoBW,KAAK,CAACG,MAAN,CAAaC,IAAjC,EAAuCZ,UAA/E;AAHU;AAFD,OAAxB;AASA,WAAKe,QAAL,CAAe;AAAElB,QAAAA,QAAQ,EAAEgB;AAAZ,OAAf;AACH,KAnEwB;;AAAA,SAqEzBG,aArEyB,GAqEPR,KAAF,IAAa;AACzBA,MAAAA,KAAK,CAACS,cAAN;AACA,WAAKC,KAAL,CAAWC,MAAX,CAAmB,KAAKvB,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BC,KAA7C,EAAoD,KAAKH,KAAL,CAAWC,QAAX,CAAoBO,QAApB,CAA6BL,KAAjF,EAAwF,KAAKH,KAAL,CAAWU,QAAnG;AACH,KAxEwB;AAAA;;AA2BzBQ,EAAAA,aAAa,CAAGf,KAAH,EAAUqB,KAAV,EAAkB;AAC3B,QAAIC,OAAO,GAAG,IAAd;;AACA,QAAK,CAACD,KAAN,EAAc;AACV,aAAO,IAAP;AACH;;AAED,QAAKA,KAAK,CAACnB,QAAX,EAAsB;AAClBoB,MAAAA,OAAO,GAAGtB,KAAK,CAACuB,IAAN,OAAiB,EAAjB,IAAuBD,OAAjC;AACH;;AAED,QAAKD,KAAK,CAACf,SAAX,EAAuB;AACnBgB,MAAAA,OAAO,GAAGtB,KAAK,CAACwB,MAAN,IAAgBH,KAAK,CAACf,SAAtB,IAAmCgB,OAA7C;AACH;;AAED,QAAKD,KAAK,CAACI,SAAX,EAAuB;AACnBH,MAAAA,OAAO,GAAGtB,KAAK,CAACwB,MAAN,IAAgBH,KAAK,CAACI,SAAtB,IAAmCH,OAA7C;AACH;;AACD,QAAKD,KAAK,CAAClB,OAAX,EAAqB;AACjB,YAAMuB,OAAO,GAAG,uIAAhB;AACAJ,MAAAA,OAAO,GAAGI,OAAO,CAACC,IAAR,CAAc3B,KAAd,KAAyBsB,OAAnC;AACH;;AAID,WAAOA,OAAP;AACH;;AAwBDM,EAAAA,MAAM,GAAI;AACN,UAAMC,iBAAiB,GAAG,EAA1B;;AACA,SAAM,IAAIC,GAAV,IAAiB,KAAKjC,KAAL,CAAWC,QAA5B,EAAuC;AACnC+B,MAAAA,iBAAiB,CAACE,IAAlB,CAAwB;AACpBC,QAAAA,EAAE,EAAEF,GADgB;AAEpBG,QAAAA,MAAM,EAAE,KAAKpC,KAAL,CAAWC,QAAX,CAAoBgC,GAApB;AAFY,OAAxB;AAIH;;AAED,QAAII,IAAI,GAAGL,iBAAiB,CAACM,GAAlB,CAAuBC,WAAW,iBACzC,oBAAC,KAAD;AACI,MAAA,GAAG,EAAEA,WAAW,CAACJ,EADrB;AAEI,MAAA,WAAW,EAAEI,WAAW,CAACH,MAAZ,CAAmBI,WAFpC;AAGI,MAAA,aAAa,EAAED,WAAW,CAACH,MAAZ,CAAmBK,aAHtC;AAII,MAAA,KAAK,EAAEF,WAAW,CAACH,MAAZ,CAAmBjC,KAJ9B;AAKI,MAAA,OAAO,EAAE,CAACoC,WAAW,CAACH,MAAZ,CAAmB7B,KALjC;AAMI,MAAA,cAAc,EAAEgC,WAAW,CAACH,MAAZ,CAAmBhC,UANvC;AAOI,MAAA,OAAO,EAAEmC,WAAW,CAACH,MAAZ,CAAmBM,OAPhC;AAQI,MAAA,OAAO,EAAI9B,KAAF,IAAa,KAAKD,mBAAL,CAA0BC,KAA1B,EAAiC2B,WAAW,CAACJ,EAA7C,CAR1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADO,CAAX,CATM,CAqBN;AACA;AACA;;AAEA,QAAIQ,YAAY,GAAG,IAAnB;;AAEA,QAAI,KAAKrB,KAAL,CAAWsB,KAAf,EAAsB;AAClBD,MAAAA,YAAY,gBACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKrB,KAAL,CAAWsB,KAAX,CAAiBC,OAArB,CADJ;AAGH;;AACD,QAAIC,YAAY,GAAC,IAAjB;;AACA,QAAG,KAAKxB,KAAL,CAAWyB,eAAd,EAA8B;AAC1BD,MAAAA,YAAY,GAAC,KAAKxB,KAAL,CAAW0B,OAAX,CAAmBd,IAAnB,CAAwB,GAAxB,CAAb;AACH;;AAGD,wBACI;AAAK,MAAA,SAAS,EAAExC,OAAO,CAACK,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK4C,YADL,EAEKG,YAFL,eAGI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADzB,eAEI;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,WAAW,EAAC,qBAAhC;AAAuD,MAAA,IAAI,EAAC,OAA5D;AAAoE,MAAA,QAAQ,EAAE,KAAKnC,mBAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAGa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHb,eAGqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHrC,eAII;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,WAAW,EAAC,gBAAnC;AAAqD,MAAA,IAAI,EAAC,UAA1D;AAAqE,MAAA,QAAQ,EAAE,KAAKA,mBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAKa,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKS,aAAtB;AAAoC,MAAA,KAAK,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eALb,CADA,CAHJ,CADJ;AAeH;;AAjIwB;;AAoI7B,MAAM6B,eAAe,GAAGjD,KAAK,IAAI;AAC7B,SAAO;AACHkD,IAAAA,OAAO,EAAElD,KAAK,CAACkD,OADZ;AAEHN,IAAAA,KAAK,EAAE5C,KAAK,CAAC4C,KAFV;AAGHG,IAAAA,eAAe,EAAE/C,KAAK,CAACmD,KAAN,KAAgB;AAH9B,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACH9B,IAAAA,MAAM,EAAE,CAAErB,KAAF,EAASM,QAAT,EAAmBE,QAAnB,KAAiC2C,QAAQ,CAAE1D,OAAO,CAAC2D,IAAR,CAAcpD,KAAd,EAAqBM,QAArB,EAA+BE,QAA/B,CAAF;AAD9C,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAAEqD,eAAF,EAAmBG,kBAAnB,CAAP,CAAgDrD,IAAhD,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Input from '../../components/UI/Input/Input';\nimport classes from './Auth.css';\nimport * as actions from '../../store/actions/index'\nimport {connect} from 'react-redux';\nimport { Button, Segment } from 'semantic-ui-react';\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                value:'',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                \n            },\n            password: {\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                \n            }\n        },\n        isSignup: true\n    }\n\n   \n\n    checkValidity ( value, rules ) {\n        let isValid = true;\n        if ( !rules ) {\n            return true;\n        }\n\n        if ( rules.required ) {\n            isValid = value.trim() !== '' && isValid;\n        }\n\n        if ( rules.minLength ) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if ( rules.maxLength ) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n        if ( rules.isEmail ) {\n            const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            isValid = pattern.test( value ) && isValid\n        }\n\n        \n\n        return isValid;\n    }\n\n    inputChangedHandler = ( event) => {\n        console.log(event.target.value);\n        console.log(event.target.name);\n        const updatedControls = {\n            ...this.state.controls,\n            [event.target.name]: {\n                ...this.state.controls[event.target.name],\n                value: event.target.value,\n                valid: this.checkValidity( event.target.value, this.state.controls[event.target.name].validation ),\n                \n            }\n        };\n        this.setState( { controls: updatedControls } );\n    }\n\n    submitHandler = ( event ) => {\n        event.preventDefault();\n        this.props.onAuth( this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup );\n    }\n\n    \n\n    render () {\n        const formElementsArray = [];\n        for ( let key in this.state.controls ) {\n            formElementsArray.push( {\n                id: key,\n                config: this.state.controls[key]\n            } );\n        }\n\n        let form = formElementsArray.map( formElement => (\n            <Input\n                key={formElement.id}\n                elementType={formElement.config.elementType}\n                elementConfig={formElement.config.elementConfig}\n                value={formElement.config.value}\n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={( event ) => this.inputChangedHandler( event, formElement.id )} />\n        ) );\n\n        // if (this.props.loading) {\n        //     form = <Spinner />\n        // }\n\n        let errorMessage = null;\n\n        if (this.props.error) {\n            errorMessage = (\n                <p>{this.props.error.message}</p>\n            );\n        }\n        let authredirect=null;\n        if(this.props.isAuthenticated){\n            authredirect=this.props.history.push('/');\n        }\n    \n\n        return (\n            <div className={classes.Auth}>\n                {errorMessage}\n                {authredirect}\n                <Segment >\n                <form >\n                    <label>EMAIL:</label><br></br>\n                    <input type=\"email\" placeholder=\"Enter Email-address\"  name=\"email\" onChange={this.inputChangedHandler}></input>\n                    <br></br><label>PASSWORD:</label><br></br>\n                    <input type=\"password\" placeholder=\"Enter password\"  name=\"password\" onChange={this.inputChangedHandler}></input>\n                    <br></br><Button onClick={this.submitHandler}color=\"grey\">LOGIN</Button>\n                </form>\n                </Segment>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        loading: state.loading,\n        error: state.error,\n        isAuthenticated: state.token !== null\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onAuth: ( email, password, isSignup ) => dispatch( actions.auth( email, password, isSignup ) ),\n    };\n};\n\nexport default connect( mapStateToProps, mapDispatchToProps )( Auth );\n"]},"metadata":{},"sourceType":"module"}