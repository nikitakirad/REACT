{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Fullpost from '../../components/Fullpost/Fullpost';\nimport { Card, Menu, Segment, Button } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: {\n        title: '',\n        content: ''\n      },\n      fetchedposts: [],\n      s: false\n    };\n\n    this.serversidedata = () => {\n      const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n      console.log(queryParams);\n      axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' + queryParams).then(res => {\n        const fetchedOrders = [];\n        console.log(res.data);\n\n        for (let key in res.data) {\n          fetchedOrders.push({ ...res.data[key],\n            id: key\n          });\n          this.setState({\n            fetchedposts: fetchedOrders\n          });\n          console.log(fetchedOrders);\n          console.log(this.state.fetchedposts);\n        }\n      });\n    };\n\n    this.inputHandler = event => {\n      console.log('hi'); //console.log(this.state.fetchedposts);\n\n      let updatedstate = { ...this.state.post\n      };\n      updatedstate[event.target.name] = event.target.value;\n      this.setState({\n        post: updatedstate\n      });\n      console.log(this.state.post);\n    };\n\n    this.saveddata = () => {\n      const postdata = { ...this.state.post,\n        userId: this.props.userid\n      };\n      console.log(this.props.token);\n      axios.post('https://blog-app-e7a85.firebaseio.com/posts.json?auth=' + this.props.token, postdata).then(response => {\n        console.log(response.data);\n        this.serversidedata();\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.serversidedata();\n  }\n\n  componentDidUpdate() {// if(this.state.s){\n    //  const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n    // console.log(queryParams);\n    // axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' +queryParams)\n    // .then( res => {\n    //     const fetchedOrders = [];\n    //     console.log(res.data);\n    //     for ( let key in res.data ) {\n    //          fetchedOrders.push( {\n    //              ...res.data[key],\n    //             id: key\n    //          } );\n    //          this.setState({fetchedposts:fetchedOrders});\n    //          console.log(fetchedOrders);\n    //          console.log(this.state.fetchedposts);\n    //     }});}\n  }\n\n  render() {\n    // let fullpost=<p>No posts yet</p>;\n    // if(this.state.fetchedposts.length>0){\n    // fullpost=this.state.fetchedposts.map(posts=>(\n    //     <Fullpost title={posts.title}\n    //     content={posts.content}/>\n    // ))}\n    // console.log(this.state.fetchedposts.length);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, this.props.token ? /*#__PURE__*/React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Posts\"), /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }\n    }, \"Log out\")) : /*#__PURE__*/React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, \"Log In\")))), /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Newpost, {\n      oninputHandler: event => this.inputHandler(event),\n      onsaveddata: this.saveddata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(Fullpost, {\n      posts: this.state.fetchedposts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    token: state.token,\n    userid: state.userId\n  };\n};\n\nexport default connect(mapStateToProps)(blog);","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js"],"names":["React","Component","Newpost","axios","connect","Fullpost","Card","Menu","Segment","Button","Link","blog","state","post","title","content","fetchedposts","s","serversidedata","queryParams","props","token","userid","console","log","get","then","res","fetchedOrders","data","key","push","id","setState","inputHandler","event","updatedstate","target","name","value","saveddata","postdata","userId","response","componentDidMount","componentDidUpdate","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Fullpost from '../../components/Fullpost/Fullpost';\nimport {Card,Menu,Segment,Button} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom'\nclass blog extends Component{\n    state={\n        post:{\n            title:'',\n            content:''\n        },\n        fetchedposts:[],\n        s:false\n    }\n    componentDidMount(){\n        this.serversidedata();\n           \n        }\n    serversidedata=()=>{\n        const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n        console.log(queryParams);\n        axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' +queryParams)\n        .then( res => {\n            const fetchedOrders = [];\n            console.log(res.data);\n            for ( let key in res.data ) {\n                fetchedOrders.push( {\n                    ...res.data[key],\n                    id: key\n                } );\n                this.setState({fetchedposts:fetchedOrders});\n                console.log(fetchedOrders);\n                console.log(this.state.fetchedposts);\n            }});\n    }\n     componentDidUpdate(){\n        // if(this.state.s){\n        //  const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n        // console.log(queryParams);\n        // axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' +queryParams)\n        // .then( res => {\n        //     const fetchedOrders = [];\n        //     console.log(res.data);\n        //     for ( let key in res.data ) {\n        //          fetchedOrders.push( {\n        //              ...res.data[key],\n        //             id: key\n        //          } );\n        //          this.setState({fetchedposts:fetchedOrders});\n        //          console.log(fetchedOrders);\n        //          console.log(this.state.fetchedposts);\n        //     }});}\n     }\n    inputHandler=(event)=>{\n        console.log('hi');\n        //console.log(this.state.fetchedposts);\n        let updatedstate={...this.state.post};\n        updatedstate[event.target.name]=event.target.value;\n        this.setState({post:updatedstate})\n        console.log(this.state.post);\n    }\n    saveddata=()=>{\n        const postdata={...this.state.post,userId:this.props.userid};\n        console.log(this.props.token);\n        axios.post('https://blog-app-e7a85.firebaseio.com/posts.json?auth=' + this.props.token,postdata)\n        .then( response => {\n            console.log( response.data );\n            this.serversidedata();\n        } );\n    }\n    render(){\n        // let fullpost=<p>No posts yet</p>;\n        // if(this.state.fetchedposts.length>0){\n        // fullpost=this.state.fetchedposts.map(posts=>(\n        //     <Fullpost title={posts.title}\n        //     content={posts.content}/>\n        // ))}\n        // console.log(this.state.fetchedposts.length);\n    return(\n        <div>\n            <Segment inverted>\n            <Menu inverted pointing secondary>\n            {this.props.token ?\n            (<Menu.Item position=\"right\">\n           \n                <Button class=\"ui button\" color=\"grey\" as={Link} to ='/'>Posts</Button>\n                <Button class=\"ui button\" color=\"grey\" as={Link} to ='/login'>Log out</Button>\n        \n            </Menu.Item>) :\n                (<Menu.Item position=\"right\">\n                    <Button class=\"ui button\" color=\"grey\" as={Link} to ='/login'>Log In</Button>\n      \n                </Menu.Item>)\n            }\n\n            </Menu>\n            </Segment>\n            <Segment textAlign=\"center\">\n            <Newpost oninputHandler={(event)=>this.inputHandler(event)}\n            onsaveddata={this.saveddata}/><br></br>\n            <Fullpost posts={this.state.fetchedposts} />\n            </Segment>\n        </div>\n    );\n}\n}\nconst mapStateToProps= state =>{\n    console.log(state);\n    return{\n        token:state.token,\n        userid:state.userId\n    }\n}\nexport default connect(mapStateToProps)(blog);"]},"metadata":{},"sourceType":"module"}