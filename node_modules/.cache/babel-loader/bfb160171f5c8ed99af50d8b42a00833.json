{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Fullpost from '../../components/Fullpost/Fullpost';\nimport { Menu, Segment, Button, Message, Container } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: {\n        title: '',\n        content: ''\n      },\n      fetchedposts: [],\n      errorMessage: 'null'\n    };\n\n    this.serversidedata = () => {\n      const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n      console.log(queryParams);\n      axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' + queryParams).then(res => {\n        const fetchedOrders = [];\n        console.log(res.data);\n\n        for (let key in res.data) {\n          fetchedOrders.push({ ...res.data[key],\n            id: key\n          });\n          this.setState({\n            fetchedposts: fetchedOrders\n          });\n          console.log(fetchedOrders);\n          console.log(this.state.fetchedposts);\n        }\n      }).catch(err => {\n        this.setState({\n          errorMessage: err.response.data.error\n        });\n      });\n    };\n\n    this.inputHandler = event => {\n      console.log('hi'); //console.log(this.state.fetchedposts);\n\n      let updatedstate = { ...this.state.post\n      };\n      updatedstate[event.target.name] = event.target.value;\n      this.setState({\n        post: updatedstate\n      });\n      console.log(this.state.post);\n    };\n\n    this.saveddata = () => {\n      const postdata = { ...this.state.post,\n        userId: this.props.userid\n      };\n      console.log(this.props.token);\n      axios.post('https://blog-app-e7a85.firebaseio.com/posts.json?auth=' + this.props.token, postdata).then(response => {\n        console.log(response.data);\n        this.serversidedata();\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.token) {\n      this.serversidedata();\n    }\n  }\n\n  render() {\n    // let fullpost=<p>No posts yet</p>;\n    // if(this.state.fetchedposts.length>0){\n    // fullpost=this.state.fetchedposts.map(posts=>(\n    //     <Fullpost title={posts.title}\n    //     content={posts.content}/>\n    // ))}\n    // console.log(this.state.fetchedposts.length);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Segment, {\n      inverted: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Menu, {\n      inverted: true,\n      pointing: true,\n      secondary: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, this.props.token ? /*#__PURE__*/React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Posts\"), /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"Log out\")) : /*#__PURE__*/React.createElement(Menu.Item, {\n      position: \"right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      class: \"ui button\",\n      color: \"grey\",\n      as: Link,\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Log In\")))), this.props.token ? /*#__PURE__*/React.createElement(Segment, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Newpost, {\n      oninputHandler: event => this.inputHandler(event),\n      onsaveddata: this.saveddata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 43\n      }\n    }), /*#__PURE__*/React.createElement(Fullpost, {\n      posts: this.state.fetchedposts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })) : /*#__PURE__*/React.createElement(Container, {\n      textAlign: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 24\n      }\n    }, \"Please Login\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    token: state.token,\n    userid: state.userId\n  };\n};\n\nexport default connect(mapStateToProps)(blog);","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js"],"names":["React","Component","Newpost","axios","connect","Fullpost","Menu","Segment","Button","Message","Container","Link","blog","state","post","title","content","fetchedposts","errorMessage","serversidedata","queryParams","props","token","userid","console","log","get","then","res","fetchedOrders","data","key","push","id","setState","catch","err","response","error","inputHandler","event","updatedstate","target","name","value","saveddata","postdata","userId","componentDidMount","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Fullpost from '../../components/Fullpost/Fullpost';\nimport {Menu,Segment,Button, Message, Container} from 'semantic-ui-react';\nimport {Link} from 'react-router-dom'\nclass blog extends Component{\n    state={\n        post:{\n            title:'',\n            content:''\n        },\n        fetchedposts:[],\n        errorMessage:'null'\n    }\n    componentDidMount(){\n        if(this.props.token){\n        this.serversidedata();}\n    }\n    serversidedata=()=>{\n        const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n        console.log(queryParams);\n        axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' +queryParams)\n        .then( res => {\n            const fetchedOrders = [];\n            console.log(res.data);\n            for ( let key in res.data ) {\n                fetchedOrders.push( {\n                    ...res.data[key],\n                    id: key\n                } );\n                this.setState({fetchedposts:fetchedOrders});\n                console.log(fetchedOrders);\n                console.log(this.state.fetchedposts);\n            }})\n            .catch(err=>{\n                this.setState({errorMessage:err.response.data.error})\n            });\n    }\n     \n    inputHandler=(event)=>{\n        console.log('hi');\n        //console.log(this.state.fetchedposts);\n        let updatedstate={...this.state.post};\n        updatedstate[event.target.name]=event.target.value;\n        this.setState({post:updatedstate})\n        console.log(this.state.post);\n    }\n    saveddata=()=>{\n        const postdata={...this.state.post,userId:this.props.userid};\n        console.log(this.props.token);\n        axios.post('https://blog-app-e7a85.firebaseio.com/posts.json?auth=' + this.props.token,postdata)\n        .then( response => {\n            console.log( response.data );\n            this.serversidedata();\n        } );\n    }\n    render(){\n        // let fullpost=<p>No posts yet</p>;\n        // if(this.state.fetchedposts.length>0){\n        // fullpost=this.state.fetchedposts.map(posts=>(\n        //     <Fullpost title={posts.title}\n        //     content={posts.content}/>\n        // ))}\n        // console.log(this.state.fetchedposts.length);\n    return(\n        <div>\n            <Segment inverted>\n            <Menu inverted pointing secondary>\n            {this.props.token ?\n            (<Menu.Item position=\"right\">\n           \n                <Button class=\"ui button\" color=\"grey\" as={Link} to ='/'>Posts</Button>\n                <Button class=\"ui button\" color=\"grey\" as={Link} to ='/login'>Log out</Button>\n        \n            </Menu.Item>) :\n                (<Menu.Item position=\"right\">\n                    <Button class=\"ui button\" color=\"grey\" as={Link} to ='/login'>Log In</Button>\n      \n                </Menu.Item>)\n            }\n\n            </Menu>\n            </Segment>\n            {this.props.token ?\n            <Segment textAlign=\"center\">\n            \n            <Newpost oninputHandler={(event)=>this.inputHandler(event)}\n            onsaveddata={this.saveddata}/><br></br>\n            <Fullpost posts={this.state.fetchedposts} />\n            </Segment>:<Container textAlign=\"center\">Please Login</Container>}\n        </div>\n    );\n}\n}\nconst mapStateToProps= state =>{\n    console.log(state);\n    return{\n        token:state.token,\n        userid:state.userId\n    }\n}\nexport default connect(mapStateToProps)(blog);"]},"metadata":{},"sourceType":"module"}