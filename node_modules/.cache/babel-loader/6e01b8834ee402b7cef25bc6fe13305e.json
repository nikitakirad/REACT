{"ast":null,"code":"var _jsxFileName = \"/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js\";\nimport React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Fullpost from '../../components/Fullpost/Fullpost';\nimport { Card } from 'semantic-ui-react';\n\nclass blog extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: {\n        title: '',\n        content: ''\n      },\n      fetchedposts: []\n    };\n\n    this.inputHandler = event => {\n      console.log('hi'); //console.log(this.state.fetchedposts);\n\n      let updatedstate = { ...this.state.post\n      };\n      updatedstate[event.target.name] = event.target.value;\n      this.setState({\n        post: updatedstate\n      });\n      console.log(this.state.post);\n    };\n\n    this.saveddata = () => {\n      const postdata = { ...this.state.post,\n        userId: this.props.userid\n      };\n      console.log(this.props.token);\n      axios.post('https://blog-app-e7a85.firebaseio.com/posts.json?auth=' + this.props.token, postdata).then(response => {\n        console.log(response.data);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n    console.log(queryParams);\n    axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' + queryParams).then(res => {\n      const fetchedOrders = [];\n      console.log(res.data);\n\n      for (let key in res.data) {\n        fetchedOrders.push({ ...res.data[key],\n          id: key\n        });\n        this.setState({\n          fetchedposts: fetchedOrders\n        });\n        console.log(fetchedOrders);\n        console.log(this.state.fetchedposts);\n      }\n    });\n  } // componentDidUpdate(){\n  //     const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n  //     console.log(queryParams);\n  //     axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' +queryParams)\n  //     .then( res => {\n  //         const fetchedOrders = [];\n  //         console.log(res.data);\n  //         for ( let key in res.data ) {\n  //             fetchedOrders.push( {\n  //                 ...res.data[key],\n  //                 id: key\n  //             } );\n  //             this.setState({fetchedposts:fetchedOrders});\n  //             console.log(fetchedOrders);\n  //             console.log(this.state.fetchedposts);\n  //         }});\n  // }\n\n\n  render() {\n    // let fullpost=<p>No posts yet</p>;\n    // if(this.state.fetchedposts.length>0){\n    // fullpost=this.state.fetchedposts.map(posts=>(\n    //     <Fullpost title={posts.title}\n    //     content={posts.content}/>\n    // ))}\n    // console.log(this.state.fetchedposts.length);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Fullpost, {\n      posts: this.state.fetchedposts,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Newpost, {\n      oninputHandler: event => this.inputHandler(event),\n      onsaveddata: this.saveddata,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  console.log(state);\n  return {\n    token: state.token,\n    userid: state.userId\n  };\n};\n\nexport default connect(mapStateToProps)(blog);","map":{"version":3,"sources":["/home/nikki/Desktop/React-Assignment/blog-assignment/src/containers/Blog/Blog.js"],"names":["React","Component","Newpost","axios","connect","Fullpost","Card","blog","state","post","title","content","fetchedposts","inputHandler","event","console","log","updatedstate","target","name","value","setState","saveddata","postdata","userId","props","userid","token","then","response","data","componentDidMount","queryParams","get","res","fetchedOrders","key","push","id","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,SAAQC,IAAR,QAAmB,mBAAnB;;AACA,MAAMC,IAAN,SAAmBN,SAAnB,CAA4B;AAAA;AAAA;AAAA,SACxBO,KADwB,GAClB;AACFC,MAAAA,IAAI,EAAC;AACDC,QAAAA,KAAK,EAAC,EADL;AAEDC,QAAAA,OAAO,EAAC;AAFP,OADH;AAKFC,MAAAA,YAAY,EAAC;AALX,KADkB;;AAAA,SA4CxBC,YA5CwB,GA4CVC,KAAD,IAAS;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EADkB,CAElB;;AACA,UAAIC,YAAY,GAAC,EAAC,GAAG,KAAKT,KAAL,CAAWC;AAAf,OAAjB;AACAQ,MAAAA,YAAY,CAACH,KAAK,CAACI,MAAN,CAAaC,IAAd,CAAZ,GAAgCL,KAAK,CAACI,MAAN,CAAaE,KAA7C;AACA,WAAKC,QAAL,CAAc;AAACZ,QAAAA,IAAI,EAACQ;AAAN,OAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,IAAvB;AACH,KAnDuB;;AAAA,SAoDxBa,SApDwB,GAoDd,MAAI;AACV,YAAMC,QAAQ,GAAC,EAAC,GAAG,KAAKf,KAAL,CAAWC,IAAf;AAAoBe,QAAAA,MAAM,EAAC,KAAKC,KAAL,CAAWC;AAAtC,OAAf;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,KAAL,CAAWE,KAAvB;AACAxB,MAAAA,KAAK,CAACM,IAAN,CAAW,2DAA2D,KAAKgB,KAAL,CAAWE,KAAjF,EAAuFJ,QAAvF,EACCK,IADD,CACOC,QAAQ,IAAI;AACfd,QAAAA,OAAO,CAACC,GAAR,CAAaa,QAAQ,CAACC,IAAtB;AAEH,OAJD;AAKH,KA5DuB;AAAA;;AAQxBC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,WAAW,GAAG,WAAW,KAAKP,KAAL,CAAWE,KAAtB,GAA8B,6BAA9B,GAA8D,KAAKF,KAAL,CAAWC,MAAzE,GAAkF,GAAtG;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYgB,WAAZ;AACA7B,IAAAA,KAAK,CAAC8B,GAAN,CAAU,qDAAoDD,WAA9D,EACCJ,IADD,CACOM,GAAG,IAAI;AACV,YAAMC,aAAa,GAAG,EAAtB;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,GAAG,CAACJ,IAAhB;;AACA,WAAM,IAAIM,GAAV,IAAiBF,GAAG,CAACJ,IAArB,EAA4B;AACxBK,QAAAA,aAAa,CAACE,IAAd,CAAoB,EAChB,GAAGH,GAAG,CAACJ,IAAJ,CAASM,GAAT,CADa;AAEhBE,UAAAA,EAAE,EAAEF;AAFY,SAApB;AAIA,aAAKf,QAAL,CAAc;AAACT,UAAAA,YAAY,EAACuB;AAAd,SAAd;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,aAAZ;AACApB,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWI,YAAvB;AACH;AAAC,KAZN;AAcC,GAzBmB,CA2BxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAkBA2B,EAAAA,MAAM,GAAE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACJ,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAE,KAAK/B,KAAL,CAAWI,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,OAAD;AAAS,MAAA,cAAc,EAAGE,KAAD,IAAS,KAAKD,YAAL,CAAkBC,KAAlB,CAAlC;AACA,MAAA,WAAW,EAAE,KAAKQ,SADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAOH;;AA5E2B;;AA8E5B,MAAMkB,eAAe,GAAEhC,KAAK,IAAG;AAC3BO,EAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACA,SAAM;AACFmB,IAAAA,KAAK,EAACnB,KAAK,CAACmB,KADV;AAEFD,IAAAA,MAAM,EAAClB,KAAK,CAACgB;AAFX,GAAN;AAIH,CAND;;AAOA,eAAepB,OAAO,CAACoC,eAAD,CAAP,CAAyBjC,IAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Newpost from '../../components/Newpost/Newpost';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Fullpost from '../../components/Fullpost/Fullpost';\nimport {Card} from 'semantic-ui-react';\nclass blog extends Component{\n    state={\n        post:{\n            title:'',\n            content:''\n        },\n        fetchedposts:[]\n    }\n    componentDidMount(){\n        const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n        console.log(queryParams);\n        axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' +queryParams)\n        .then( res => {\n            const fetchedOrders = [];\n            console.log(res.data);\n            for ( let key in res.data ) {\n                fetchedOrders.push( {\n                    ...res.data[key],\n                    id: key\n                } );\n                this.setState({fetchedposts:fetchedOrders});\n                console.log(fetchedOrders);\n                console.log(this.state.fetchedposts);\n            }});\n           \n        }\n    \n    // componentDidUpdate(){\n    //     const queryParams = '?auth=' + this.props.token + '&orderBy=\"userId\"&equalTo=\"' + this.props.userid + '\"';\n    //     console.log(queryParams);\n    //     axios.get('https://blog-app-e7a85.firebaseio.com/posts.json' +queryParams)\n    //     .then( res => {\n    //         const fetchedOrders = [];\n    //         console.log(res.data);\n    //         for ( let key in res.data ) {\n    //             fetchedOrders.push( {\n    //                 ...res.data[key],\n    //                 id: key\n    //             } );\n    //             this.setState({fetchedposts:fetchedOrders});\n    //             console.log(fetchedOrders);\n    //             console.log(this.state.fetchedposts);\n    //         }});\n    // }\n    inputHandler=(event)=>{\n        console.log('hi');\n        //console.log(this.state.fetchedposts);\n        let updatedstate={...this.state.post};\n        updatedstate[event.target.name]=event.target.value;\n        this.setState({post:updatedstate})\n        console.log(this.state.post);\n    }\n    saveddata=()=>{\n        const postdata={...this.state.post,userId:this.props.userid};\n        console.log(this.props.token);\n        axios.post('https://blog-app-e7a85.firebaseio.com/posts.json?auth=' + this.props.token,postdata)\n        .then( response => {\n            console.log( response.data );\n           \n        } );\n    }\n    render(){\n        // let fullpost=<p>No posts yet</p>;\n        // if(this.state.fetchedposts.length>0){\n        // fullpost=this.state.fetchedposts.map(posts=>(\n        //     <Fullpost title={posts.title}\n        //     content={posts.content}/>\n        // ))}\n        // console.log(this.state.fetchedposts.length);\n    return(\n        <div>\n            <Fullpost posts={this.state.fetchedposts} />\n            <Newpost oninputHandler={(event)=>this.inputHandler(event)}\n            onsaveddata={this.saveddata}/>\n        </div>\n    );\n}\n}\nconst mapStateToProps= state =>{\n    console.log(state);\n    return{\n        token:state.token,\n        userid:state.userId\n    }\n}\nexport default connect(mapStateToProps)(blog);"]},"metadata":{},"sourceType":"module"}